version: "3"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#  db:
#    image: postgres
#    container_name: db
#    environment:
#      - POSTGRES_PASSWORD=password
#      - POSTGRES_USER=postgres
#      - POSTGRES_DB=metric_store
#      - PGDATA=/var/lib/postgresql/data
#    volumes:
#      - vd_data:/var/lib/postgresql/data
#    restart: always
#
#  consumer:
#    build:
#      context: ./services/MetricsConsumer
#      dockerfile: Dockerfile
#    container_name: consumer
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/metric_store
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=password
#      - DATASOURCE_DRIVER=org.postgresql.Driver
#    ports:
#      - "9020:9020"
#    depends_on:
#      - db
#      - kafka
#
#  producer:
#    build:
#      context: ./services/MetricsProducer
#      dockerfile: Dockerfile
#    container_name: producer
#    ports:
#      - "9021:9021"
#    depends_on:
#      - kafka
#
#volumes:
#  vd_data:
